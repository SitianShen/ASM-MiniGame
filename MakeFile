EXE = main.exe 
OBJS = main.obj zzl.obj ldf.obj lja.obj sst.obj data.obj
RES = main.res 

LINK_FLAGS = /subsystem:console
ML_FLAGS = /c /coff

$(EXE):$(OBJS) $(RES)
		del *.exe
		Link $(LINK_FLAGS) $(OBJS) $(RES)
		nmake clean

.asm.obj:
		ml $(ML_FLAGS) $<

.rc.res:
		rc $<

clean:
	del *.res
	del *.obj


# ASM_DEV = main_dev.asm zzl_dev.asm ldf_dev.asm lja_dev.asm sst_dev.asm data.asm
# OBJS_DEV = main_dev.obj zzl_dev.obj ldf_dev.obj lja_dev.obj sst_dev.obj data.obj

# main_dev:
# 	del *.exe
# 	rc main.rc
# 	ml $(ML_FLAGS) $(ASM_DEV)
# 	Link $(LINK_FLAGS) $(OBJS_DEV) $(RES)
# 	nmake clean

# 生成zzl_dev.exe
zzl_dev:
	del *.exe
	ml $(ML_FLAGS) zzl_dev.asm data.asm
	link $(LINK_FLAGS) zzl_dev.obj data.obj
	nmake clean

# 生成ldf_dev.exe
ldf_dev:
	del *.exe
	ml $(ML_FLAGS) ldf_dev.asm data.asm
	link $(LINK_FLAGS) ldf_dev.obj data.obj
	nmake clean

# 生成lja_dev.exe
lja_dev:
	del *.exe
	ml $(ML_FLAGS) lja_dev.asm data.asm
	link $(LINK_FLAGS) lja_dev.obj data.obj
	nmake clean

# 生成sst_dev.exe
sst_dev:
	del *.exe
	ml $(ML_FLAGS) sst_dev.asm data.asm
	link $(LINK_FLAGS) sst_dev.obj data.obj
	nmake clean
